{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/Like.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\nimport { NotificationType } from 'constants/NotificationType';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useStore } from 'store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledButton = styled(Button)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: \", \" 0;\\n\"])), function (p) {\n  return p.theme.spacing.xs;\n});\n/**\n * Component for rendering Like button\n */\n\n_c = StyledButton;\n\nvar Like = function Like(_ref) {\n  _s();\n\n  var postId = _ref.postId,\n      user = _ref.user,\n      likes = _ref.likes,\n      withText = _ref.withText,\n      fullWidth = _ref.fullWidth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var notification = useNotifications(); // Detect which mutation to use\n\n  var hasLiked = likes.find(function (l) {\n    return l.user === auth.user.id && l.post === postId;\n  });\n  var operation = hasLiked ? 'delete' : 'create';\n  var options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: {\n        postId: postId,\n        userId: auth.user.id\n      }\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: {\n        id: hasLiked ? hasLiked.id : null\n      }\n    }\n  };\n\n  var _useMutation = useMutation(options[operation].mutation, {\n    refetchQueries: [{\n      query: GET_AUTH_USER\n    }, {\n      query: GET_POSTS,\n      variables: {\n        authUserId: auth.user.id\n      }\n    }, {\n      query: GET_FOLLOWED_POSTS,\n      variables: {\n        userId: auth.user.id\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      mutate = _useMutation2[0];\n\n  var handleButtonClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$mutate, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return mutate({\n                variables: {\n                  input: _objectSpread({}, options[operation].variables)\n                }\n              });\n\n            case 3:\n              _yield$mutate = _context.sent;\n              data = _yield$mutate.data;\n\n              if (!(auth.user.id === user.id)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setLoading(false));\n\n            case 7:\n              _context.next = 9;\n              return notification.toggle({\n                user: user,\n                postId: postId,\n                hasDone: hasLiked,\n                notificationType: NotificationType.LIKE,\n                notificationTypeId: data.createLike ? data.createLike.id : null\n              });\n\n            case 9:\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleButtonClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    fullWidth: fullWidth && fullWidth,\n    disabled: loading,\n    text: true,\n    onClick: function onClick() {\n      return handleButtonClick(mutate);\n    },\n    color: hasLiked && 'primary.main',\n    children: [/*#__PURE__*/_jsxDEV(LikeIcon, {\n      color: hasLiked && 'primary.main'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Spacing, {\n      inline: true,\n      left: \"xxs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), withText && /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Like, \"WwNZtX02Y6p/+RTkNViXQYlD3fc=\", false, function () {\n  return [useStore, useNotifications, useMutation];\n});\n\n_c2 = Like;\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool\n};\nexport default Like;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Like\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/Like.js"],"names":["React","useState","PropTypes","styled","useMutation","LikeIcon","Spacing","Button","GET_FOLLOWED_POSTS","GET_POSTS","GET_AUTH_USER","CREATE_LIKE","DELETE_LIKE","NotificationType","useNotifications","useStore","StyledButton","p","theme","spacing","xs","Like","postId","user","likes","withText","fullWidth","loading","setLoading","auth","notification","hasLiked","find","l","id","post","operation","options","create","mutation","variables","userId","delete","refetchQueries","query","authUserId","mutate","handleButtonClick","input","data","toggle","hasDone","notificationType","LIKE","notificationTypeId","createLike","propTypes","string","isRequired","object","array","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\n\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst StyledButton = styled(Button)`\n  padding: ${(p) => p.theme.spacing.xs} 0;\n`;\n\n/**\n * Component for rendering Like button\n */\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\n  const [loading, setLoading] = useState(false);\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  // Detect which mutation to use\n  const hasLiked = likes.find((l) => l.user === auth.user.id && l.post === postId);\n  const operation = hasLiked ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: { postId, userId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: { id: hasLiked ? hasLiked.id : null },\n    },\n  };\n  const [mutate] = useMutation(options[operation].mutation, {\n    refetchQueries: [\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n    ],\n  });\n\n  const handleButtonClick = async () => {\n    setLoading(true);\n    const { data } = await mutate({\n      variables: { input: { ...options[operation].variables } },\n    });\n\n    // Create or delete notification for like\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      postId,\n      hasDone: hasLiked,\n      notificationType: NotificationType.LIKE,\n      notificationTypeId: data.createLike ? data.createLike.id : null,\n    });\n    setLoading(false);\n  };\n\n  return (\n    <StyledButton\n      fullWidth={fullWidth && fullWidth}\n      disabled={loading}\n      text\n      onClick={() => handleButtonClick(mutate)}\n      color={hasLiked && 'primary.main'}\n    >\n      <LikeIcon color={hasLiked && 'primary.main'} />\n      <Spacing inline left=\"xxs\" />\n      {withText && <b>Like</b>}\n    </StyledButton>\n  );\n};\n\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nexport default Like;\n"]},"metadata":{},"sourceType":"module"}