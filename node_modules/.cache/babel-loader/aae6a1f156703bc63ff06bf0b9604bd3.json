{"ast":null,"code":"import _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/People/People.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Container } from 'components/Layout';\nimport Skeleton from 'components/Skeleton';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Head from 'components/Head';\nimport PeopleCard from './PeopleCard';\nimport { GET_USERS } from 'graphql/user';\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\nimport { useStore } from 'store';\nimport { useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Root = styled(Container)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: \", \";\\n\\n  @media (min-width: \", \") {\\n    margin-left: \", \";\\n    padding: 0;\\n  }\\n\"])), function (p) {\n  return p.theme.spacing.lg;\n}, function (p) {\n  return p.theme.screen.lg;\n}, function (p) {\n  return p.theme.spacing.lg;\n});\n_c = Root;\nvar PeopleContainer = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\\n  grid-auto-rows: auto;\\n  grid-gap: 20px;\\n  margin-bottom: \", \";\\n\"])), function (p) {\n  return p.theme.spacing.lg;\n});\n/**\n * People page\n */\n\n_c2 = PeopleContainer;\n\nvar People = function People() {\n  _s();\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: PEOPLE_PAGE_USERS_LIMIT\n  };\n\n  var _useQuery = useQuery(GET_USERS, {\n    variables: variables,\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var renderContent = function renderContent() {\n    if (loading && networkStatus === 1) {\n      return /*#__PURE__*/_jsxDEV(PeopleContainer, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 280,\n          count: PEOPLE_PAGE_USERS_LIMIT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this);\n    }\n\n    var _data$getUsers = data.getUsers,\n        users = _data$getUsers.users,\n        count = _data$getUsers.count;\n    if (!users.length > 0) return /*#__PURE__*/_jsxDEV(Empty, {\n      text: \"No people yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      data: users,\n      dataKey: \"getUsers.users\",\n      count: parseInt(count),\n      variables: variables,\n      fetchMore: fetchMore,\n      children: function children(data) {\n        var showNextLoading = loading && networkStatus === 3 && count !== data.length;\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PeopleContainer, {\n            children: data.map(function (user) {\n              return /*#__PURE__*/_jsxDEV(PeopleCard, {\n                user: user\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, _this), showNextLoading && /*#__PURE__*/_jsxDEV(Loading, {\n            top: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      title: \"Find new People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(People, \"71gRMhetShs8T86/vWeYTVcqORE=\", false, function () {\n  return [useStore, useQuery];\n});\n\n_c3 = People;\nexport default People;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"PeopleContainer\");\n$RefreshReg$(_c3, \"People\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/People/People.js"],"names":["React","Fragment","styled","Container","Skeleton","Loading","Empty","InfiniteScroll","Head","PeopleCard","GET_USERS","PEOPLE_PAGE_USERS_LIMIT","useStore","useQuery","Root","p","theme","spacing","lg","screen","PeopleContainer","div","People","auth","variables","userId","user","id","skip","limit","notifyOnNetworkStatusChange","data","loading","fetchMore","networkStatus","renderContent","getUsers","users","count","length","parseInt","showNextLoading","map"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport { Container } from 'components/Layout';\nimport Skeleton from 'components/Skeleton';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Head from 'components/Head';\nimport PeopleCard from './PeopleCard';\n\nimport { GET_USERS } from 'graphql/user';\n\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport { useQuery } from '@apollo/client';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PeopleContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  margin-bottom: ${(p) => p.theme.spacing.lg};\n`;\n\n/**\n * People page\n */\nconst People = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: PEOPLE_PAGE_USERS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USERS, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return (\n        <PeopleContainer>\n          <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\n        </PeopleContainer>\n      );\n    }\n\n    const { users, count } = data.getUsers;\n    if (!users.length > 0) return <Empty text=\"No people yet.\" />;\n\n    return (\n      <InfiniteScroll\n        data={users}\n        dataKey=\"getUsers.users\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              <PeopleContainer>\n                {data.map((user) => (\n                  <PeopleCard key={user.id} user={user} />\n                ))}\n              </PeopleContainer>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Find new People\" />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nexport default People;\n"]},"metadata":{},"sourceType":"module"}