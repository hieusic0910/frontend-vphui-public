{"ast":null,"code":"import _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Explore/Explore.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Container } from 'components/Layout';\nimport ExploreCard from './ExploreCard';\nimport Skeleton from 'components/Skeleton';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport { Loading } from 'components/Loading';\nimport Head from 'components/Head';\nimport { GET_POSTS } from 'graphql/post';\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport { useStore } from 'store';\nimport * as Routes from 'routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Root = styled(Container)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: \", \";\\n  margin-bottom: \", \";\\n\\n  @media (min-width: \", \") {\\n    margin-left: \", \";\\n    padding: 0;\\n  }\\n\"])), function (p) {\n  return p.theme.spacing.lg;\n}, function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.screen.lg;\n}, function (p) {\n  return p.theme.spacing.lg;\n});\n_c = Root;\nvar PostsContainer = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\\n  grid-auto-rows: auto;\\n  grid-gap: 20px;\\n\"])));\n/**\n * Explore page\n */\n\n_c2 = PostsContainer;\n\nvar Explore = function Explore() {\n  _s();\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalPostId = _useState2[0],\n      setModalPostId = _useState2[1];\n\n  var variables = {\n    authUserId: auth.user.id,\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT\n  };\n\n  var _useQuery = useQuery(GET_POSTS, {\n    variables: variables\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var closeModal = function closeModal() {\n    window.history.pushState('', '', '/explore');\n    setModalPostId(null);\n  };\n\n  var openModal = function openModal(postId) {\n    window.history.pushState('', '', generatePath(Routes.POST, {\n      id: postId\n    }));\n    setModalPostId(postId);\n  };\n\n  var renderContent = function renderContent() {\n    if (loading && networkStatus === 1) {\n      return /*#__PURE__*/_jsxDEV(PostsContainer, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 300,\n          count: EXPLORE_PAGE_POSTS_LIMIT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this);\n    }\n\n    var _data$getPosts = data.getPosts,\n        posts = _data$getPosts.posts,\n        count = _data$getPosts.count;\n    if (!posts.length > 0) return /*#__PURE__*/_jsxDEV(Empty, {\n      text: \"No posts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 35\n    }, _this);\n    return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      data: posts,\n      dataKey: \"getPosts.posts\",\n      count: parseInt(count),\n      variables: variables,\n      fetchMore: fetchMore,\n      children: function children(data) {\n        var showNextLoading = loading && networkStatus === 3 && count !== data.length;\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PostsContainer, {\n            children: data.map(function (post) {\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Modal, {\n                  open: modalPostId === post.id,\n                  onClose: closeModal,\n                  children: /*#__PURE__*/_jsxDEV(PostPopup, {\n                    id: post.id,\n                    closeModal: closeModal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(ExploreCard, {\n                  image: post.image,\n                  countLikes: post.likes.length,\n                  countComments: post.comments.length,\n                  openPostPopup: function openPostPopup() {\n                    return openModal(post.id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, _this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, _this), showNextLoading && /*#__PURE__*/_jsxDEV(Loading, {\n            top: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 35\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      title: \"Explore New Posts and Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, _this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Explore, \"h8R4gTOeD9hdfzwyAZ9rydgsz/o=\", false, function () {\n  return [useStore, useQuery];\n});\n\n_c3 = Explore;\nexport default Explore;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"PostsContainer\");\n$RefreshReg$(_c3, \"Explore\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Explore/Explore.js"],"names":["React","useState","Fragment","styled","generatePath","useQuery","Container","ExploreCard","Skeleton","PostPopup","Modal","InfiniteScroll","Empty","Loading","Head","GET_POSTS","EXPLORE_PAGE_POSTS_LIMIT","useStore","Routes","Root","p","theme","spacing","lg","sm","screen","PostsContainer","div","Explore","auth","modalPostId","setModalPostId","variables","authUserId","user","id","skip","limit","data","loading","fetchMore","networkStatus","closeModal","window","history","pushState","openModal","postId","POST","renderContent","getPosts","posts","count","length","parseInt","showNextLoading","map","post","image","likes","comments"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { Container } from 'components/Layout';\nimport ExploreCard from './ExploreCard';\nimport Skeleton from 'components/Skeleton';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport { Loading } from 'components/Loading';\nimport Head from 'components/Head';\n\nimport { GET_POSTS } from 'graphql/post';\n\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n`;\n\n/**\n * Explore page\n */\nconst Explore = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n  const variables = {\n    authUserId: auth.user.id,\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_POSTS, {\n    variables,\n  });\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/explore');\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return (\n        <PostsContainer>\n          <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\n        </PostsContainer>\n      );\n    }\n\n    const { posts, count } = data.getPosts;\n    if (!posts.length > 0) return <Empty text=\"No posts yet.\" />;\n\n    return (\n      <InfiniteScroll\n        data={posts}\n        dataKey=\"getPosts.posts\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              <PostsContainer>\n                {data.map((post) => (\n                  <Fragment key={post.id}>\n                    <Modal open={modalPostId === post.id} onClose={closeModal}>\n                      <PostPopup id={post.id} closeModal={closeModal} />\n                    </Modal>\n\n                    <ExploreCard\n                      image={post.image}\n                      countLikes={post.likes.length}\n                      countComments={post.comments.length}\n                      openPostPopup={() => openModal(post.id)}\n                    />\n                  </Fragment>\n                ))}\n              </PostsContainer>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Explore New Posts and Users\" />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nexport default Explore;\n"]},"metadata":{},"sourceType":"module"}