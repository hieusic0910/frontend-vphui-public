{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Profile/ProfileCoverUpload.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\nimport { UploadImageIcon } from 'components/icons';\nimport { Loading } from 'components/Loading';\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\nimport defaultBackgroundImage from './background.jpg';\nimport { useStore } from 'store';\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Root = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 350px;\\n  position: relative;\\n  background-image: url(\", \");\\n  background-size: cover;\\n  background-position: center;\\n  border-bottom-left-radius: \", \";\\n  border-bottom-right-radius: \", \";\\n  box-shadow: \", \";\\n\"])), function (p) {\n  return p.image ? p.image : defaultBackgroundImage;\n}, function (p) {\n  return p.theme.radius.md;\n}, function (p) {\n  return p.theme.radius.md;\n}, function (p) {\n  return p.theme.shadows.sm;\n});\n_c = Root;\nvar Input = styled.input(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: none;\\n\"])));\n_c2 = Input;\nvar Label = styled.label(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  overflow: hidden;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  left: \", \";\\n  top: \", \";\\n  padding: \", \" \", \";\\n  border-radius: \", \";\\n  transition: background-color 0.4s;\\n  background-color: rgba(0, 0, 0, 0.6);\\n\\n  &:hover {\\n    background-color: rgba(0, 0, 0, 0.8);\\n  }\\n\"])), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.spacing.xxs;\n}, function (p) {\n  return p.theme.spacing.xs;\n}, function (p) {\n  return p.theme.radius.sm;\n});\n/**\n * Displays and Updates user Cover image\n */\n\n_c3 = Label;\n\nvar ProfileCoverUpload = function ProfileCoverUpload(_ref) {\n  _s();\n\n  var coverImagePublicId = _ref.coverImagePublicId,\n      coverImage = _ref.coverImage,\n      userId = _ref.userId;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var message = useGlobalMessage();\n\n  var handleImageChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              file = e.target.files[0];\n              e.target.value = '';\n\n              if (file) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              if (!(file.size >= MAX_USER_COVER_IMAGE_SIZE)) {\n                _context.next = 9;\n                break;\n              }\n\n              message.error(\"File size should be less then \".concat(MAX_USER_COVER_IMAGE_SIZE / 1000000, \"MB\"));\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return client.mutate({\n                mutation: UPLOAD_PHOTO,\n                variables: {\n                  input: {\n                    id: auth.user.id,\n                    image: file,\n                    imagePublicId: coverImagePublicId,\n                    isCover: true\n                  }\n                },\n                refetchQueries: function refetchQueries() {\n                  return [{\n                    query: GET_FOLLOWED_POSTS,\n                    variables: {\n                      userId: auth.user.id\n                    }\n                  }, {\n                    query: GET_AUTH_USER\n                  }, {\n                    query: GET_USER,\n                    variables: {\n                      username: auth.user.username\n                    }\n                  }];\n                }\n              });\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](9);\n              message.error(_context.t0.graphQLErrors[0].message);\n\n            case 17:\n              setLoading(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 14]]);\n    }));\n\n    return function handleImageChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    image: coverImage,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"coverImage\",\n      type: \"file\",\n      id: \"coverImage\",\n      onChange: handleImageChange,\n      accept: \"image/x-png,image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n      top: \"xl\",\n      size: \"xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }, _this), auth.user.id === userId && /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"coverImage\",\n      children: /*#__PURE__*/_jsxDEV(UploadImageIcon, {\n        width: \"14\",\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProfileCoverUpload, \"+CPrY5xJDBdLxThbJkc14Kbs6Ro=\", false, function () {\n  return [useStore, useApolloClient, useGlobalMessage];\n});\n\n_c4 = ProfileCoverUpload;\nProfileCoverUpload.propTypes = {\n  userId: PropTypes.string.isRequired,\n  coverImagePublicId: PropTypes.string,\n  coverImage: PropTypes.string\n};\nexport default ProfileCoverUpload;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"ProfileCoverUpload\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Profile/ProfileCoverUpload.js"],"names":["React","useState","PropTypes","styled","useApolloClient","UploadImageIcon","Loading","MAX_USER_COVER_IMAGE_SIZE","GET_AUTH_USER","GET_USER","UPLOAD_PHOTO","GET_FOLLOWED_POSTS","defaultBackgroundImage","useStore","useGlobalMessage","Root","div","p","image","theme","radius","md","shadows","sm","Input","input","Label","label","spacing","xxs","xs","ProfileCoverUpload","coverImagePublicId","coverImage","userId","auth","client","loading","setLoading","message","handleImageChange","e","file","target","files","value","size","error","mutate","mutation","variables","id","user","imagePublicId","isCover","refetchQueries","query","username","graphQLErrors","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport { UploadImageIcon } from 'components/icons';\nimport { Loading } from 'components/Loading';\n\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport defaultBackgroundImage from './background.jpg';\n\nimport { useStore } from 'store';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 350px;\n  position: relative;\n  background-image: url(${(p) => (p.image ? p.image : defaultBackgroundImage)});\n  background-size: cover;\n  background-position: center;\n  border-bottom-left-radius: ${(p) => p.theme.radius.md};\n  border-bottom-right-radius: ${(p) => p.theme.radius.md};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  left: ${(p) => p.theme.spacing.sm};\n  top: ${(p) => p.theme.spacing.sm};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border-radius: ${(p) => p.theme.radius.sm};\n  transition: background-color 0.4s;\n  background-color: rgba(0, 0, 0, 0.6);\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\n/**\n * Displays and Updates user Cover image\n */\nconst ProfileCoverUpload = ({ coverImagePublicId, coverImage, userId }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async (e) => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = '';\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\n      message.error(`File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: {\n          input: {\n            id: auth.user.id,\n            image: file,\n            imagePublicId: coverImagePublicId,\n            isCover: true,\n          },\n        },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Root image={coverImage}>\n      <Input\n        name=\"coverImage\"\n        type=\"file\"\n        id=\"coverImage\"\n        onChange={handleImageChange}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\n\n      {auth.user.id === userId && (\n        <Label htmlFor=\"coverImage\">\n          <UploadImageIcon width=\"14\" color=\"white\" />\n        </Label>\n      )}\n    </Root>\n  );\n};\n\nProfileCoverUpload.propTypes = {\n  userId: PropTypes.string.isRequired,\n  coverImagePublicId: PropTypes.string,\n  coverImage: PropTypes.string,\n};\n\nexport default ProfileCoverUpload;\n"]},"metadata":{},"sourceType":"module"}