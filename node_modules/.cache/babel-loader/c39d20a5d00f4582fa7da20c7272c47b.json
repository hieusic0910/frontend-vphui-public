{"ast":null,"code":"import _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/Message.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport { SuccessIcon, InfoIcon, WarningIcon, ErrorIcon, CloseIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from 'components/Form';\nimport theme from 'theme';\nimport { allMessageTypes } from 'constants/MessageType';\nimport { useStore } from 'store';\nimport { CLEAR_MESSAGE } from 'store/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar fade = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  from {\\n    bottom: -60px;\\n    opacity: 0;\\n  }\\n  to {\\n    bottom: 0;\\n    opacity: 1;\\n  }\\n\"])));\n/**\n * Default styles for message\n */\n\nvar Root = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  width: 100%;\\n  box-shadow: \", \";\\n  padding: \", \";\\n  z-index: \", \";\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: \", \";\\n  animation: \", \" 0.3s ease-out forwards;\\n  color: \", \";\\n\"])), function (p) {\n  return p.theme.shadows.md;\n}, function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.zIndex.xl;\n}, function (p) {\n  return p.color && p.color;\n}, fade, function (p) {\n  return p.theme.colors.white;\n});\n_c = Root;\nvar Close = styled(Button)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 20px;\\n  top: 24px;\\n\"])));\n/**\n * Displays global message as feedback in response to user operations\n */\n\n_c2 = Close;\n\nvar Message = function Message(_ref) {\n  _s();\n\n  var children = _ref.children,\n      type = _ref.type,\n      autoClose = _ref.autoClose;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 2),\n      dispatch = _useStore2[1];\n\n  useEffect(function () {\n    if (autoClose) {\n      var timer = setTimeout(function () {\n        dispatch({\n          type: CLEAR_MESSAGE\n        });\n      }, 5000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [dispatch, autoClose]);\n  var _theme$colors = theme.colors,\n      success = _theme$colors.success,\n      info = _theme$colors.info,\n      warning = _theme$colors.warning,\n      error = _theme$colors.error;\n  var Colors = {\n    SUCCESS: success,\n    INFO: info,\n    WARNING: warning,\n    ERROR: error.main\n  };\n\n  var MessageType = function MessageType(type) {\n    var icons = {\n      SUCCESS: /*#__PURE__*/_jsxDEV(SuccessIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, _this),\n      INFO: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, _this),\n      WARNING: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, _this),\n      ERROR: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, _this)\n    };\n    return icons[type];\n  };\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    color: Colors[type],\n    children: [MessageType(type), /*#__PURE__*/_jsxDEV(Spacing, {\n      left: type && 'xs',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Close, {\n      ghost: true,\n      onClick: function onClick() {\n        return dispatch({\n          type: CLEAR_MESSAGE\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Message, \"xQwd8yriRLi+p6J6u52YaAaa8N8=\", false, function () {\n  return [useStore];\n});\n\n_c3 = Message;\nMessage.defaultProps = {\n  autoClose: true\n};\nMessage.propTypes = {\n  children: PropTypes.any.isRequired,\n  type: PropTypes.oneOf(allMessageTypes),\n  autoClose: PropTypes.bool\n};\nexport default Message;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"Close\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/Message.js"],"names":["React","useEffect","PropTypes","styled","keyframes","SuccessIcon","InfoIcon","WarningIcon","ErrorIcon","CloseIcon","Spacing","Button","theme","allMessageTypes","useStore","CLEAR_MESSAGE","fade","Root","div","p","shadows","md","spacing","sm","zIndex","xl","color","colors","white","Close","Message","children","type","autoClose","dispatch","timer","setTimeout","clearTimeout","success","info","warning","error","Colors","SUCCESS","INFO","WARNING","ERROR","main","MessageType","icons","defaultProps","propTypes","any","isRequired","oneOf","bool"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport { SuccessIcon, InfoIcon, WarningIcon, ErrorIcon, CloseIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from 'components/Form';\n\nimport theme from 'theme';\n\nimport { allMessageTypes } from 'constants/MessageType';\n\nimport { useStore } from 'store';\nimport { CLEAR_MESSAGE } from 'store/message';\n\nconst fade = keyframes`\n  from {\n    bottom: -60px;\n    opacity: 0;\n  }\n  to {\n    bottom: 0;\n    opacity: 1;\n  }\n`;\n\n/**\n * Default styles for message\n */\nconst Root = styled.div`\n  position: fixed;\n  width: 100%;\n  box-shadow: ${(p) => p.theme.shadows.md};\n  padding: ${(p) => p.theme.spacing.sm};\n  z-index: ${(p) => p.theme.zIndex.xl};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(p) => p.color && p.color};\n  animation: ${fade} 0.3s ease-out forwards;\n  color: ${(p) => p.theme.colors.white};\n`;\n\nconst Close = styled(Button)`\n  position: absolute;\n  right: 20px;\n  top: 24px;\n`;\n\n/**\n * Displays global message as feedback in response to user operations\n */\nconst Message = ({ children, type, autoClose }) => {\n  const [, dispatch] = useStore();\n\n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        dispatch({ type: CLEAR_MESSAGE });\n      }, 5000);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [dispatch, autoClose]);\n\n  const { success, info, warning, error } = theme.colors;\n\n  const Colors = {\n    SUCCESS: success,\n    INFO: info,\n    WARNING: warning,\n    ERROR: error.main,\n  };\n\n  const MessageType = (type) => {\n    const icons = {\n      SUCCESS: <SuccessIcon />,\n      INFO: <InfoIcon />,\n      WARNING: <WarningIcon />,\n      ERROR: <ErrorIcon />,\n    };\n\n    return icons[type];\n  };\n\n  return (\n    <Root color={Colors[type]}>\n      {MessageType(type)}\n      <Spacing left={type && 'xs'}>{children}</Spacing>\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\n        <CloseIcon color=\"white\" />\n      </Close>\n    </Root>\n  );\n};\n\nMessage.defaultProps = {\n  autoClose: true,\n};\n\nMessage.propTypes = {\n  children: PropTypes.any.isRequired,\n  type: PropTypes.oneOf(allMessageTypes),\n  autoClose: PropTypes.bool,\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}