{"ast":null,"code":"var _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ThemeProvider } from 'styled-components';\nimport { createApolloClient } from 'utils/apollo-client';\nimport { StoreProvider } from 'store';\nimport 'normalize.css';\nimport theme from 'theme';\nimport App from 'components/App/App'; // GraphQL HTTP URL\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar API_URL = process.env.REACT_APP_API_URL; // GraphQL WebSocket (subscriptions) URL.\n// If its url is not set in .env then it has same url, host and pathname\n\nvar WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\nvar websocketApiUrl = WEBSOCKET_API_URL ? WEBSOCKET_API_URL : API_URL.replace('https://', 'ws://').replace('http://', 'ws://'); // Create a Apollo client\n\nvar apolloClient = createApolloClient(API_URL, websocketApiUrl);\nrender( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: apolloClient,\n  children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(StoreProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/index.js"],"names":["React","render","ApolloProvider","ThemeProvider","createApolloClient","StoreProvider","theme","App","API_URL","process","env","REACT_APP_API_URL","WEBSOCKET_API_URL","REACT_APP_WEBSOCKET_API_URL","websocketApiUrl","replace","apolloClient","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B,C,CAEA;AACA;;AACA,IAAMC,iBAAiB,GAAGH,OAAO,CAACC,GAAR,CAAYG,2BAAtC;AACA,IAAMC,eAAe,GAAGF,iBAAiB,GACrCA,iBADqC,GAErCJ,OAAO,CAACO,OAAR,CAAgB,UAAhB,EAA4B,OAA5B,EAAqCA,OAArC,CAA6C,SAA7C,EAAwD,OAAxD,CAFJ,C,CAIA;;AACA,IAAMC,YAAY,GAAGZ,kBAAkB,CAACI,OAAD,EAAUM,eAAV,CAAvC;AAEAb,MAAM,eACJ,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEe,YAAxB;AAAA,yBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,KAAtB;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EAQJW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARI,CAAN","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ThemeProvider } from 'styled-components';\nimport { createApolloClient } from 'utils/apollo-client';\nimport { StoreProvider } from 'store';\n\nimport 'normalize.css';\nimport theme from 'theme';\n\nimport App from 'components/App/App';\n\n// GraphQL HTTP URL\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// GraphQL WebSocket (subscriptions) URL.\n// If its url is not set in .env then it has same url, host and pathname\nconst WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\nconst websocketApiUrl = WEBSOCKET_API_URL\n  ? WEBSOCKET_API_URL\n  : API_URL.replace('https://', 'ws://').replace('http://', 'ws://');\n\n// Create a Apollo client\nconst apolloClient = createApolloClient(API_URL, websocketApiUrl);\n\nrender(\n  <ApolloProvider client={apolloClient}>\n    <ThemeProvider theme={theme}>\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}