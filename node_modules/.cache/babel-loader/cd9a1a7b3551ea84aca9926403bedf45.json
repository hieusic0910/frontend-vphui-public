{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/CreateComment.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { CREATE_COMMENT } from 'graphql/comment';\nimport { Textarea, Button } from './Form';\nimport { NotificationType } from 'constants/NotificationType';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useStore } from 'store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Form = styled.form(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n\"])));\n/**\n * Creates a comment for a post\n */\n\n_c = Form;\n\nvar CreateComment = function CreateComment(_ref) {\n  _s();\n\n  var post = _ref.post,\n      focus = _ref.focus;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var notification = useNotifications();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var buttonEl = useRef(null);\n  var TextareaEl = useRef(false);\n\n  var _useMutation = useMutation(CREATE_COMMENT, {\n    refetchQueries: [{\n      query: GET_FOLLOWED_POSTS,\n      variables: {\n        userId: auth.user.id\n      }\n    }, {\n      query: GET_USER,\n      variables: {\n        username: auth.user.username\n      }\n    }, {\n      query: GET_AUTH_USER\n    }, {\n      query: GET_POSTS,\n      variables: {\n        authUserId: auth.user.id\n      }\n    }, {\n      query: GET_POST,\n      variables: {\n        id: post.id\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createComment = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  useEffect(function () {\n    focus && TextareaEl.current.focus();\n  }, [focus]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$createComment, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return createComment({\n                variables: {\n                  input: {\n                    comment: comment,\n                    author: auth.user.id,\n                    postId: post.id\n                  }\n                }\n              });\n\n            case 3:\n              _yield$createComment = _context.sent;\n              data = _yield$createComment.data;\n              setComment(''); // Create notification on comment\n\n              if (auth.user.id !== post.author.id) {\n                notification.create({\n                  user: post.author,\n                  postId: post.id,\n                  notificationType: NotificationType.COMMENT,\n                  notificationTypeId: data.createComment.id\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onEnterPress = function onEnterPress(e) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      buttonEl.current.click();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Textarea, {\n      onChange: function onChange(e) {\n        return setComment(e.target.value);\n      },\n      value: comment,\n      placeholder: \"Add a comment...\",\n      onKeyDown: onEnterPress,\n      ref: TextareaEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      color: comment ? 'primary.main' : 'grey[500]',\n      weight: \"bold\",\n      text: true,\n      ref: buttonEl,\n      disabled: !comment || loading,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateComment, \"kke0TvHdyU+e5Obl0hGCUlv9LW8=\", false, function () {\n  return [useStore, useNotifications, useMutation];\n});\n\n_c2 = CreateComment;\nCreateComment.propTypes = {\n  post: PropTypes.object.isRequired,\n  focus: PropTypes.bool\n};\nexport default CreateComment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"CreateComment\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/CreateComment.js"],"names":["React","useState","useRef","useEffect","PropTypes","styled","useMutation","GET_AUTH_USER","GET_USER","GET_POST","GET_POSTS","GET_FOLLOWED_POSTS","CREATE_COMMENT","Textarea","Button","NotificationType","useNotifications","useStore","Form","form","CreateComment","post","focus","auth","notification","comment","setComment","buttonEl","TextareaEl","refetchQueries","query","variables","userId","user","id","username","authUserId","createComment","loading","current","handleSubmit","e","preventDefault","input","author","postId","data","create","notificationType","COMMENT","notificationTypeId","onEnterPress","keyCode","click","target","value","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\n\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { CREATE_COMMENT } from 'graphql/comment';\n\nimport { Textarea, Button } from './Form';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\n/**\n * Creates a comment for a post\n */\nconst CreateComment = ({ post, focus }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const [comment, setComment] = useState('');\n  const buttonEl = useRef(null);\n  const TextareaEl = useRef(false);\n  const [createComment, { loading }] = useMutation(CREATE_COMMENT, {\n    refetchQueries: [\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      { query: GET_USER, variables: { username: auth.user.username } },\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      { query: GET_POST, variables: { id: post.id } },\n    ],\n  });\n\n  useEffect(() => {\n    focus && TextareaEl.current.focus();\n  }, [focus]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data } = await createComment({\n      variables: { input: { comment, author: auth.user.id, postId: post.id } },\n    });\n    setComment('');\n\n    // Create notification on comment\n    if (auth.user.id !== post.author.id) {\n      notification.create({\n        user: post.author,\n        postId: post.id,\n        notificationType: NotificationType.COMMENT,\n        notificationTypeId: data.createComment.id,\n      });\n    }\n  };\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      buttonEl.current.click();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Textarea\n        onChange={(e) => setComment(e.target.value)}\n        value={comment}\n        placeholder=\"Add a comment...\"\n        onKeyDown={onEnterPress}\n        ref={TextareaEl}\n      />\n\n      <Button\n        type=\"submit\"\n        color={comment ? 'primary.main' : 'grey[500]'}\n        weight=\"bold\"\n        text\n        ref={buttonEl}\n        disabled={!comment || loading}\n      >\n        Post\n      </Button>\n    </Form>\n  );\n};\n\nCreateComment.propTypes = {\n  post: PropTypes.object.isRequired,\n  focus: PropTypes.bool,\n};\n\nexport default CreateComment;\n"]},"metadata":{},"sourceType":"module"}