{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport { gql } from '@apollo/client';\n/**\n * Records to select from notifications\n */\n\nvar notificationPayload = \"\\n  id\\n  createdAt\\n  author {\\n    id\\n    fullName\\n    username\\n    image\\n  }\\n  follow {\\n    id\\n  }\\n  comment {\\n    id\\n    post {\\n      id\\n      image\\n    }\\n  }\\n  like {\\n    id\\n    post {\\n      id\\n      image\\n    }\\n  }\\n\";\n/**\n * Creates a notification for user\n */\n\nexport var CREATE_NOTIFICATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation($input: CreateNotificationInput!) {\\n    createNotification(input: $input) {\\n      id\\n    }\\n  }\\n\"])));\n/**\n * Deletes a notification\n */\n\nexport var DELETE_NOTIFICATION = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation($input: DeleteNotificationInput!) {\\n    deleteNotification(input: $input) {\\n      id\\n    }\\n  }\\n\"])));\n/**\n * Gets notifications for user\n */\n\nexport var GET_USER_NOTIFICATION = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query($userId: ID!, $skip: Int, $limit: Int) {\\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\\n      count\\n      notifications {\\n        \", \"\\n      }\\n    }\\n  }\\n\"])), notificationPayload);\n/**\n * Updates notification seen property\n */\n\nexport var UPDATE_NOTIFICATION_SEEN = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  mutation($input: UpdateNotificationSeenInput!) {\\n    updateNotificationSeen(input: $input)\\n  }\\n\"])));\n/**\n * Get user's notifications in real time\n */\n\nexport var NOTIFICATION_CREATED_OR_DELETED = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  subscription {\\n    notificationCreatedOrDeleted {\\n      operation\\n      notification {\\n        \", \"\\n      }\\n    }\\n  }\\n\"])), notificationPayload);","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/graphql/notification.js"],"names":["gql","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA;AACA;AACA;;AACA,IAAMC,mBAAmB,wPAAzB;AA4BA;AACA;AACA;;AACA,OAAO,IAAMC,mBAAmB,GAAGF,GAAH,sLAAzB;AAQP;AACA;AACA;;AACA,OAAO,IAAMG,mBAAmB,GAAGH,GAAH,wLAAzB;AAQP;AACA;AACA;;AACA,OAAO,IAAMI,qBAAqB,GAAGJ,GAAH,4QAKxBC,mBALwB,CAA3B;AAWP;AACA;AACA;;AACA,OAAO,IAAMI,wBAAwB,GAAGL,GAAH,6KAA9B;AAMP;AACA;AACA;;AACA,OAAO,IAAMM,+BAA+B,GAAGN,GAAH,0MAKlCC,mBALkC,CAArC","sourcesContent":["import { gql } from '@apollo/client';\n\n/**\n * Records to select from notifications\n */\nconst notificationPayload = `\n  id\n  createdAt\n  author {\n    id\n    fullName\n    username\n    image\n  }\n  follow {\n    id\n  }\n  comment {\n    id\n    post {\n      id\n      image\n    }\n  }\n  like {\n    id\n    post {\n      id\n      image\n    }\n  }\n`;\n\n/**\n * Creates a notification for user\n */\nexport const CREATE_NOTIFICATION = gql`\n  mutation($input: CreateNotificationInput!) {\n    createNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a notification\n */\nexport const DELETE_NOTIFICATION = gql`\n  mutation($input: DeleteNotificationInput!) {\n    deleteNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets notifications for user\n */\nexport const GET_USER_NOTIFICATION = gql`\n  query($userId: ID!, $skip: Int, $limit: Int) {\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      notifications {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Updates notification seen property\n */\nexport const UPDATE_NOTIFICATION_SEEN = gql`\n  mutation($input: UpdateNotificationSeenInput!) {\n    updateNotificationSeen(input: $input)\n  }\n`;\n\n/**\n * Get user's notifications in real time\n */\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\n  subscription {\n    notificationCreatedOrDeleted {\n      operation\n      notification {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}