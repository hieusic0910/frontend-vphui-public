{"ast":null,"code":"import _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Notifications/Notifications.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\nimport { Container, Content } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport Skeleton from 'components/Skeleton';\nimport Notification from 'components/App/Notification';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport Head from 'components/Head';\nimport { useStore } from 'store';\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Root = styled(Container)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: \", \";\\n\"])), function (p) {\n  return p.theme.spacing.lg;\n});\n_c = Root;\nvar List = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  overflow: hidden;\\n  border-radius: \", \";\\n  border: 1px solid \", \";\\n\"])), function (p) {\n  return p.theme.radius.sm;\n}, function (p) {\n  return p.theme.colors.border.main;\n});\n/**\n * Notifications page\n */\n\n_c2 = List;\n\nvar Notifications = function Notifications() {\n  _s();\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT\n  };\n\n  var _useQuery = useQuery(GET_USER_NOTIFICATION, {\n    variables: variables,\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var renderContent = function renderContent() {\n    if (loading && networkStatus === 1) {\n      return /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 56,\n        bottom: \"xxs\",\n        count: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, _this);\n    }\n\n    var _data$getUserNotifica = data.getUserNotifications,\n        notifications = _data$getUserNotifica.notifications,\n        count = _data$getUserNotifica.count;\n\n    if (!notifications.length) {\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        text: \"No notifications yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      data: notifications,\n      dataKey: \"getUserNotifications.notifications\",\n      count: parseInt(count),\n      variables: variables,\n      fetchMore: fetchMore,\n      children: function children(data) {\n        var showNextLoading = loading && networkStatus === 3 && count !== data.length;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            children: data.map(function (notification) {\n              return /*#__PURE__*/_jsxDEV(Notification, {\n                notification: notification,\n                close: function close() {\n                  return false;\n                }\n              }, notification.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this), showNextLoading && /*#__PURE__*/_jsxDEV(Loading, {\n            top: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 35\n          }, _this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        title: \"\".concat(auth.user.username, \"'s Notifications\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Notifications, \"71gRMhetShs8T86/vWeYTVcqORE=\", false, function () {\n  return [useStore, useQuery];\n});\n\n_c3 = Notifications;\nexport default Notifications;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Notifications\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/pages/Notifications/Notifications.js"],"names":["React","styled","useQuery","Container","Content","Loading","Skeleton","Notification","InfiniteScroll","Empty","Head","useStore","GET_USER_NOTIFICATION","NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT","Root","p","theme","spacing","lg","List","div","radius","sm","colors","border","main","Notifications","auth","variables","userId","user","id","skip","limit","notifyOnNetworkStatusChange","data","loading","fetchMore","networkStatus","renderContent","getUserNotifications","notifications","count","length","parseInt","showNextLoading","map","notification","username"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\n\nimport { Container, Content } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport Skeleton from 'components/Skeleton';\nimport Notification from 'components/App/Notification';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport Head from 'components/Head';\n\nimport { useStore } from 'store';\n\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\n\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n`;\n\nconst List = styled.div`\n  overflow: hidden;\n  border-radius: ${(p) => p.theme.radius.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\n/**\n * Notifications page\n */\nconst Notifications = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USER_NOTIFICATION, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return <Skeleton height={56} bottom=\"xxs\" count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT} />;\n    }\n\n    const { notifications, count } = data.getUserNotifications;\n    if (!notifications.length) {\n      return <Empty text=\"No notifications yet.\" />;\n    }\n\n    return (\n      <InfiniteScroll\n        data={notifications}\n        dataKey=\"getUserNotifications.notifications\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <>\n              <List>\n                {data.map((notification) => (\n                  <Notification key={notification.id} notification={notification} close={() => false} />\n                ))}\n              </List>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Content>\n      <Root maxWidth=\"md\">\n        <Head title={`${auth.user.username}'s Notifications`} />\n\n        {renderContent()}\n      </Root>\n    </Content>\n  );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}