{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hieutran/Desktop/create-social-network-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/App/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GlobalStyle } from './GlobalStyles';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\nimport Message from 'components/Message';\nimport { Loading } from 'components/Loading';\nimport AuthLayout from 'pages/Auth/AuthLayout';\nimport NotFound from 'components/NotFound';\nimport AppLayout from './AppLayout';\nimport ScrollToTop from './ScrollToTop';\nimport { useStore } from 'store';\n/**\n * Root component of the app\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      message = _useStore2[0].message;\n\n  var _useQuery = useQuery(GET_AUTH_USER),\n      loading = _useQuery.loading,\n      subscribeToMore = _useQuery.subscribeToMore,\n      data = _useQuery.data,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  useEffect(function () {\n    var unsubscribe = subscribeToMore({\n      document: NOTIFICATION_CREATED_OR_DELETED,\n      updateQuery: function () {\n        var _updateQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(prev, _ref) {\n          var subscriptionData, oldNotifications, _subscriptionData$dat, operation, notification, newNotifications, notifications, index, authUser;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  subscriptionData = _ref.subscriptionData;\n\n                  if (subscriptionData.data) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", prev);\n\n                case 3:\n                  oldNotifications = prev.getAuthUser.newNotifications;\n                  _subscriptionData$dat = subscriptionData.data.notificationCreatedOrDeleted, operation = _subscriptionData$dat.operation, notification = _subscriptionData$dat.notification;\n\n                  if (!(operation === 'CREATE')) {\n                    _context.next = 11;\n                    break;\n                  }\n\n                  if (!(window.location.href.split('/')[3] === 'notifications')) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", prev);\n\n                case 8:\n                  // Add new notification\n                  newNotifications = [notification].concat(_toConsumableArray(oldNotifications));\n                  _context.next = 15;\n                  break;\n\n                case 11:\n                  // Remove from notifications\n                  notifications = oldNotifications;\n                  index = notifications.findIndex(function (n) {\n                    return n.id === notification.id;\n                  });\n\n                  if (index > -1) {\n                    notifications.splice(index, 1);\n                  }\n\n                  newNotifications = notifications;\n\n                case 15:\n                  // Attach new notifications to authUser\n                  authUser = prev.getAuthUser;\n                  authUser.newNotifications = newNotifications;\n                  return _context.abrupt(\"return\", {\n                    getAuthUser: authUser\n                  });\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function updateQuery(_x, _x2) {\n          return _updateQuery.apply(this, arguments);\n        }\n\n        return updateQuery;\n      }()\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n  useEffect(function () {\n    var unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: function updateQuery(prev, _ref2) {\n        var subscriptionData = _ref2.subscriptionData;\n        if (!subscriptionData.data) return prev;\n        var oldConversations = prev.getAuthUser.newConversations;\n        var newConversation = subscriptionData.data.newConversation; // Don't show message notification in Header if user already is on messages page\n\n        if (window.location.href.split('/')[3] === 'messages') {\n          return prev;\n        } // If authUser already has unseen message from that user,\n        // remove old message, so we can show the new one\n\n\n        var index = oldConversations.findIndex(function (u) {\n          return u.id === newConversation.id;\n        });\n\n        if (index > -1) {\n          oldConversations.splice(index, 1);\n        } // Merge conversations\n\n\n        var mergeConversations = [newConversation].concat(_toConsumableArray(oldConversations)); // Attach new conversation to authUser\n\n        var authUser = prev.getAuthUser;\n        authUser.newConversations = mergeConversations;\n        return {\n          getAuthUser: authUser\n        };\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {\n    top: \"xl\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, _this);\n\n  if (error) {\n    var isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n    if (isDevelopment) {\n      console.error(error);\n    }\n\n    var devErrorMessage = 'Sorry, something went wrong. Please open the browser console to view the detailed error message.';\n    var prodErrorMessage = \"Sorry, something went wrong. We're working on getting this fixed as soon as we can.\";\n    return /*#__PURE__*/_jsxDEV(NotFound, {\n      message: isDevelopment ? devErrorMessage : prodErrorMessage,\n      showHomePageLink: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ScrollToTop, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: data.getAuthUser ? /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          render: function render() {\n            return /*#__PURE__*/_jsxDEV(AppLayout, {\n              authUser: data.getAuthUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 40\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          render: function render() {\n            return /*#__PURE__*/_jsxDEV(AuthLayout, {\n              refetch: refetch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 40\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this), message.content.text && /*#__PURE__*/_jsxDEV(Message, {\n      type: message.content.type,\n      autoClose: message.content.autoClose,\n      children: message.content.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"lIbacHRt5pH+Hr2wPYSLxk97tyU=\", false, function () {\n  return [useStore, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hieutran/Desktop/create-social-network-master/frontend/src/components/App/App.js"],"names":["React","useEffect","useQuery","BrowserRouter","Router","Route","Switch","GlobalStyle","GET_AUTH_USER","GET_NEW_CONVERSATIONS_SUBSCRIPTION","NOTIFICATION_CREATED_OR_DELETED","Message","Loading","AuthLayout","NotFound","AppLayout","ScrollToTop","useStore","App","message","loading","subscribeToMore","data","error","refetch","unsubscribe","document","updateQuery","prev","subscriptionData","oldNotifications","getAuthUser","newNotifications","notificationCreatedOrDeleted","operation","notification","window","location","href","split","notifications","index","findIndex","n","id","splice","authUser","oldConversations","newConversations","newConversation","u","mergeConversations","isDevelopment","process","env","NODE_ENV","console","devErrorMessage","prodErrorMessage","content","text","type","autoClose"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { GlobalStyle } from './GlobalStyles';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\n\nimport Message from 'components/Message';\nimport { Loading } from 'components/Loading';\nimport AuthLayout from 'pages/Auth/AuthLayout';\nimport NotFound from 'components/NotFound';\nimport AppLayout from './AppLayout';\nimport ScrollToTop from './ScrollToTop';\n\nimport { useStore } from 'store';\n\n/**\n * Root component of the app\n */\nconst App = () => {\n  const [{ message }] = useStore();\n\n  const { loading, subscribeToMore, data, error, refetch } = useQuery(GET_AUTH_USER);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: NOTIFICATION_CREATED_OR_DELETED,\n      updateQuery: async (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldNotifications = prev.getAuthUser.newNotifications;\n        const { operation, notification } = subscriptionData.data.notificationCreatedOrDeleted;\n\n        let newNotifications;\n\n        if (operation === 'CREATE') {\n          // Don't show message notification in Header if user already is on notifications page\n          if (window.location.href.split('/')[3] === 'notifications') {\n            return prev;\n          }\n\n          // Add new notification\n          newNotifications = [notification, ...oldNotifications];\n        } else {\n          // Remove from notifications\n          const notifications = oldNotifications;\n          const index = notifications.findIndex((n) => n.id === notification.id);\n          if (index > -1) {\n            notifications.splice(index, 1);\n          }\n\n          newNotifications = notifications;\n        }\n\n        // Attach new notifications to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newNotifications = newNotifications;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldConversations = prev.getAuthUser.newConversations;\n        const { newConversation } = subscriptionData.data;\n\n        // Don't show message notification in Header if user already is on messages page\n        if (window.location.href.split('/')[3] === 'messages') {\n          return prev;\n        }\n\n        // If authUser already has unseen message from that user,\n        // remove old message, so we can show the new one\n        const index = oldConversations.findIndex((u) => u.id === newConversation.id);\n        if (index > -1) {\n          oldConversations.splice(index, 1);\n        }\n\n        // Merge conversations\n        const mergeConversations = [newConversation, ...oldConversations];\n\n        // Attach new conversation to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newConversations = mergeConversations;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  if (loading) return <Loading top=\"xl\" />;\n  if (error) {\n    const isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n    if (isDevelopment) {\n      console.error(error);\n    }\n    const devErrorMessage =\n      'Sorry, something went wrong. Please open the browser console to view the detailed error message.';\n    const prodErrorMessage = \"Sorry, something went wrong. We're working on getting this fixed as soon as we can.\";\n    return <NotFound message={isDevelopment ? devErrorMessage : prodErrorMessage} showHomePageLink={false} />;\n  }\n\n  return (\n    <Router>\n      <GlobalStyle />\n\n      <ScrollToTop>\n        <Switch>\n          {data.getAuthUser ? (\n            <Route exact render={() => <AppLayout authUser={data.getAuthUser} />} />\n          ) : (\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\n          )}\n        </Switch>\n      </ScrollToTop>\n\n      {message.content.text && (\n        <Message type={message.content.type} autoClose={message.content.autoClose}>\n          {message.content.text}\n        </Message>\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}